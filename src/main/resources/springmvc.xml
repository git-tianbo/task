<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-4.1.xsd
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">


    <!-- 开启注解扫描   这里扫描的是我的控制层包   用来扫描@Controller注解 -->
    <context:component-scan base-package="com.mb.controller" />

    <!--&lt;!&ndash;扫描dao包下的注解&ndash;&gt;-->
    <!--    <context:component-scan base-package="dao">-->
    <!--    </context:component-scan>-->

    <!--        <context:exclude-filter type="annotation" expression="import org.springframework.stereotype.Repository"/>-->
    <!--    </context:component-scan>-->

    <!-- 创建一个视图解析器（InternalResourceViewResolver）对象 -->
    <!--    找到web工程/WEB-INF/pages文件夹  且文件结尾为jsp的文件作为映射-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!-- 开启SpringMVC框架注解的支持   用来扫描@requestmapping注解 -->
    <!--    添加此配置  可以自动加载处理映射器（requestMappinghandleMapping） 和处理适配器(requestMappinghandleAdapter)-->
    <!--    总结一句话：用它开启注解驱动 -->
    <mvc:annotation-driven />

    <!--    此配置可访问静态资源 如js css jpg-->
    <mvc:default-servlet-handler/>
    <mvc:resources location="/WEB-INF/pages/ten/images/" mapping="/images/**"/>
    <mvc:resources location="/WEB-INF/pages/ten/css/" mapping="/css/**"/>
    <mvc:resources location="/WEB-INF/pages/ten/js/" mapping="/js/**"/>


    <!--    配置tiles的视图解析器-->
    <bean id="tilesViewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" >
<!--        order="1"表示优先级，数字越小，解析器的优先级越高。-->
        <property name="order" value="1" />
    </bean>

    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/tiles.xml</value>
            </list>
        </property>
    </bean>


    <!-- 拦截器 -->
    <mvc:interceptors>
        <!-- 多个拦截器，顺序执行 -->
        <!-- 登录认证拦截器 -->
        <mvc:interceptor>
            <!--/** 表示所有url包括子url路径 -->
            <mvc:mapping path="/u/**"/>
            <bean class="com.mb.Interceptor.LoginInterceptor"/>
            <!--设置拦截器路径-->
        </mvc:interceptor>
    </mvc:interceptors>


</beans>